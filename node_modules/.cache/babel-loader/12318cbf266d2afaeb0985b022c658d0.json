{"ast":null,"code":"import _regeneratorRuntime from \"/Users/dimitri/Desktop/Hetic/ReactJS/the-trivia/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/dimitri/Desktop/Hetic/ReactJS/the-trivia/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/dimitri/Desktop/Hetic/ReactJS/the-trivia/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/dimitri/Desktop/Hetic/ReactJS/the-trivia/node_modules/@babel/runtime/helpers/esm/createClass\";\n\nvar api =\n/*#__PURE__*/\nfunction () {\n  function api() {\n    _classCallCheck(this, api);\n  }\n\n  _createClass(api, [{\n    key: \"getClues\",\n    value: function () {\n      var _getClues = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var json;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return response.json();\n\n              case 2:\n                json = _context.sent;\n                return _context.abrupt(\"return\", json);\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function getClues() {\n        return _getClues.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"getRandom\",\n    value: function () {\n      var _getRandom = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        var response, json;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return fetch('http://jservice.io/api/random?count=100');\n\n              case 2:\n                response = _context2.sent;\n                _context2.next = 5;\n                return response.json();\n\n              case 5:\n                json = _context2.sent;\n                return _context2.abrupt(\"return\", json);\n\n              case 7:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      return function getRandom() {\n        return _getRandom.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"getCategories\",\n    value: function () {\n      var _getCategories = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3() {\n        var response, json;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return fetch('http://jservice.io/api/categories?count=100');\n\n              case 2:\n                response = _context3.sent;\n                _context3.next = 5;\n                return response.json();\n\n              case 5:\n                json = _context3.sent;\n                return _context3.abrupt(\"return\", json);\n\n              case 7:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      return function getCategories() {\n        return _getCategories.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"getCategoryById\",\n    value: function () {\n      var _getCategoryById = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4(id) {\n        var response, json;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return fetch(\"http://jservice.io/api/category?id=\".concat(id));\n\n              case 2:\n                response = _context4.sent;\n                _context4.next = 5;\n                return response.json();\n\n              case 5:\n                json = _context4.sent;\n                return _context4.abrupt(\"return\", json);\n\n              case 7:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      return function getCategoryById(_x) {\n        return _getCategoryById.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"getInavlid\",\n    value: function () {\n      var _getInavlid = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee5(id) {\n        var response, json;\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.next = 2;\n                return fetch(\"http://jservice.io/api/invalid?id=\".concat(id));\n\n              case 2:\n                response = _context5.sent;\n                _context5.next = 5;\n                return response.json();\n\n              case 5:\n                json = _context5.sent;\n                return _context5.abrupt(\"return\", json);\n\n              case 7:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      return function getInavlid(_x2) {\n        return _getInavlid.apply(this, arguments);\n      };\n    }()\n  }]);\n\n  return api;\n}();\n\nexport default new api();","map":{"version":3,"sources":["/Users/dimitri/Desktop/Hetic/ReactJS/the-trivia/src/helpers/api.js"],"names":["api","response","json","fetch","id"],"mappings":";;;;;IAAMA,G;;;;;;;;;;;;;;;;;;;uBAGiBC,QAAQ,CAACC,IAAT,E;;;AAAbA,gBAAAA,I;iDACCA,I;;;;;;;;;;;;;;;;;;;;;;;;;;uBAGgBC,KAAK,CAAC,yCAAD,C;;;AAAtBF,gBAAAA,Q;;uBACaA,QAAQ,CAACC,IAAT,E;;;AAAbA,gBAAAA,I;kDACCA,I;;;;;;;;;;;;;;;;;;;;;;;;;;uBAGgBC,KAAK,CAAC,6CAAD,C;;;AAAtBF,gBAAAA,Q;;uBACaA,QAAQ,CAACC,IAAT,E;;;AAAbA,gBAAAA,I;kDACCA,I;;;;;;;;;;;;;;;;;;;iDAEaE,E;;;;;;;uBACGD,KAAK,8CAAuCC,EAAvC,E;;;AAAtBH,gBAAAA,Q;;uBACaA,QAAQ,CAACC,IAAT,E;;;AAAbA,gBAAAA,I;kDACCA,I;;;;;;;;;;;;;;;;;;;iDAEQE,E;;;;;;;uBACQD,KAAK,6CAAsCC,EAAtC,E;;;AAAtBH,gBAAAA,Q;;uBACaA,QAAQ,CAACC,IAAT,E;;;AAAbA,gBAAAA,I;kDACCA,I;;;;;;;;;;;;;;;;;;;AAIX,eAAe,IAAIF,GAAJ,EAAf","sourcesContent":["class api {\n  async getClues() {\n    //const response =\n    const json = await response.json();\n    return json;\n  }\n  async getRandom() {\n    const response = await fetch('http://jservice.io/api/random?count=100');\n    const json = await response.json();\n    return json;\n  }\n  async getCategories() {\n    const response = await fetch('http://jservice.io/api/categories?count=100');\n    const json = await response.json();\n    return json;  \n  }\n  async getCategoryById(id) {\n    const response = await fetch(`http://jservice.io/api/category?id=${id}`);\n    const json = await response.json();\n    return json;\n  }\n  async getInavlid(id) {\n    const response = await fetch(`http://jservice.io/api/invalid?id=${id}`);\n    const json = await response.json();\n    return json;\n  }\n}\n\nexport default new api();"]},"metadata":{},"sourceType":"module"}