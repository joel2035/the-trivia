{"ast":null,"code":"var _jsxFileName = \"/Users/kamgang/Desktop/React/exercice2/the-trivia/src/views/Category/Category.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nvar Category = function Category(_ref) {\n  var category = _ref.category,\n      currentQuestion = _ref.currentQuestion,\n      handleSubmit = _ref.handleSubmit,\n      answerInput = _ref.answerInput,\n      resetScore = _ref.resetScore,\n      changeCategory = _ref.changeCategory,\n      score = _ref.score,\n      life = _ref.life,\n      answerFalse = _ref.answerFalse;\n  return React.createElement(\"section\", {\n    className: \"game\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"contentTitle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \" \", React.createElement(\"h1\", {\n    className: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, \" Category: \", category.title, \" \")), React.createElement(\"button\", {\n    className: \"\",\n    type: \"button\",\n    onClick: function onClick() {\n      return changeCategory();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \"Change category \"), \" \", React.createElement(\"div\", {\n    id: \"question\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    className: \"question__title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \" \", currentQuestion, \" \"), \" \", React.createElement(\"div\", {\n    className: \"question__answerInput\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    ref: answerInput,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }), \" \"), \" \", React.createElement(\"button\", {\n    className: \"question__submit\",\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"Valid \"), \" \", React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \" Your score: \"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, score), React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \" Life: \"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, life), \" \", React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, \" \", answerFalse, \" \"), \" \"), React.createElement(\"div\", {\n    id: \"gameOver\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, \" Game Over \"), \" \", React.createElement(\"button\", {\n    className: \"\",\n    type: \"button\",\n    onClick: function onClick() {\n      return resetScore();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \"reset \"), \" \"), \" \"), \" \");\n};\n\nCategory.propTypes = {\n  category: PropTypes.shape({}).isRequired,\n  currentQuestion: PropTypes.string.isRequired,\n  handleSubmit: PropTypes.func.isRequired,\n  answerInput: PropTypes.shape({\n    value: PropTypes.instanceOf(HTMLInputElement)\n  })\n};\nexport default Category;","map":{"version":3,"sources":["/Users/kamgang/Desktop/React/exercice2/the-trivia/src/views/Category/Category.js"],"names":["React","PropTypes","Category","category","currentQuestion","handleSubmit","answerInput","resetScore","changeCategory","score","life","answerFalse","title","propTypes","shape","isRequired","string","func","value","instanceOf","HTMLInputElement"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,OAUX;AAAA,MATJC,QASI,QATJA,QASI;AAAA,MARJC,eAQI,QARJA,eAQI;AAAA,MAPJC,YAOI,QAPJA,YAOI;AAAA,MANJC,WAMI,QANJA,WAMI;AAAA,MALJC,UAKI,QALJA,UAKI;AAAA,MAJJC,cAII,QAJJA,cAII;AAAA,MAHJC,KAGI,QAHJA,KAGI;AAAA,MAFJC,IAEI,QAFJA,IAEI;AAAA,MADJC,WACI,QADJA,WACI;AAEJ,SAAS;AACC,IAAA,SAAS,EAAG,MADb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGP;AACK,IAAA,QAAQ,EACXN,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIA;AACI,IAAA,SAAS,EAAG,cADhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UACiC;AAAK,IAAA,SAAS,EAAG,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAC/BF,QAAQ,CAACS,KADsB,MADjC,CAJA,EAQA;AACO,IAAA,SAAS,EAAG,EADnB;AAEA,IAAA,IAAI,EAAG,QAFP;AAGA,IAAA,OAAO,EACL;AAAA,aAAMJ,cAAc,EAApB;AAAA,KAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBARA,OAeS;AACL,IAAA,EAAE,EAAG,UADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAET;AACG,IAAA,SAAS,EAAG,iBADf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAEEJ,eAFF,MAFS,OAMJ;AACD,IAAA,SAAS,EAAG,uBADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEL;AACM,IAAA,GAAG,EACPE,WAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFK,MANI,OAaH;AACC,IAAA,SAAS,EAAG,kBADb;AAEN,IAAA,IAAI,EAAG,QAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAbG,OAiBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAjBA,EAkBc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIG,KAAJ,CAlBd,EAmBT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAnBS,EAoBQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIC,IAAJ,CApBR,OAoBuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAC9BC,WAD8B,MApBvB,MAfT,EAwCA;AACI,IAAA,EAAE,EAAG,UADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFA,OAGsB;AACf,IAAA,SAAS,EAAG,EADG;AAEtB,IAAA,IAAI,EAAG,QAFe;AAGtB,IAAA,OAAO,EACL;AAAA,aAAMJ,UAAU,EAAhB;AAAA,KAJoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHtB,MAxCA,MAHO,MAAT;AA2DD,CAvED;;AAyEAL,QAAQ,CAACW,SAAT,GAAqB;AACnBV,EAAAA,QAAQ,EAAEF,SAAS,CAACa,KAAV,CAAgB,EAAhB,EAAoBC,UADX;AAEnBX,EAAAA,eAAe,EAAEH,SAAS,CAACe,MAAV,CAAiBD,UAFf;AAGnBV,EAAAA,YAAY,EAAEJ,SAAS,CAACgB,IAAV,CAAeF,UAHV;AAInBT,EAAAA,WAAW,EAAEL,SAAS,CAACa,KAAV,CAAgB;AAC3BI,IAAAA,KAAK,EAAEjB,SAAS,CAACkB,UAAV,CAAqBC,gBAArB;AADoB,GAAhB;AAJM,CAArB;AASA,eAAelB,QAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Category = ({\n  category,\n  currentQuestion,\n  handleSubmit,\n  answerInput,\n  resetScore,\n  changeCategory,\n  score,\n  life,\n  answerFalse\n}) => {\n\n  return ( <\n    section className = \"game\" >\n\n    <\n    form onSubmit = {\n      handleSubmit\n    } >\n    <\n    div className = \"contentTitle\" > < h1 className = \"title\" > Category: {\n      category.title\n    } < /h1></div >\n    <\n    button className = \"\"\n    type = \"button\"\n    onClick = {\n      () => changeCategory()\n    } >\n    Change category <\n    /button> <\n    div id = \"question\" >\n    <\n    h3 className = \"question__title\" > {\n      currentQuestion\n    } <\n    /h3> <\n    div className = \"question__answerInput\" >\n    <\n    input ref = {\n      answerInput\n    }\n    /> <\n    /div> <\n    button className = \"question__submit\"\n    type = \"submit\" >\n    Valid <\n    /button> <\n    h4 > Your score: < /h4><p>{score}</p >\n    <\n    h4 > Life: < /h4><p>{life}</p > < p > {\n      answerFalse\n    } < /p> <\n    /div>\n\n    <\n    div id = \"gameOver\" >\n    <\n    h4 > Game Over < /h4> <\n    button className = \"\"\n    type = \"button\"\n    onClick = {\n      () => resetScore()\n    } >\n    reset <\n    /button> <\n    /div> <\n    /form> <\n    /section>\n  );\n\n}\n\nCategory.propTypes = {\n  category: PropTypes.shape({}).isRequired,\n  currentQuestion: PropTypes.string.isRequired,\n  handleSubmit: PropTypes.func.isRequired,\n  answerInput: PropTypes.shape({\n    value: PropTypes.instanceOf(HTMLInputElement)\n  }),\n};\n\nexport default Category;"]},"metadata":{},"sourceType":"module"}