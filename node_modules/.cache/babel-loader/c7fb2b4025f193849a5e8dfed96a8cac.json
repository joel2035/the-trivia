{"ast":null,"code":"var _jsxFileName = \"/Users/dimitri/Desktop/E\\u0301cole/Hetic/ReactJS/the-trivia/src/views/Category/Category.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nvar Category = function Category(_ref) {\n  var category = _ref.category,\n      currentQuestion = _ref.currentQuestion,\n      handleSubmit = _ref.handleSubmit,\n      answerInput = _ref.answerInput,\n      resetScore = _ref.resetScore,\n      score = _ref.score,\n      life = _ref.life,\n      answerFalse = _ref.answerFalse;\n  return React.createElement(\"section\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, \"You choosed: \", category.title), React.createElement(\"div\", {\n    id: \"question\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    className: \"question__title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, currentQuestion), React.createElement(\"div\", {\n    className: \"question__answerInput\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    ref: answerInput,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    className: \"question__submit\",\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, \"Valid\"), React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, \"Your score:\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, score), React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, \"Life:\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, life), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, answerFalse)), React.createElement(\"div\", {\n    id: \"gameOver\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \"Game Over\"), React.createElement(\"button\", {\n    className: \"\",\n    type: \"button\",\n    onClick: function onClick() {\n      return resetScore();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \"reset\")), React.createElement(\"div\", {\n    id: \"categorySucceeds\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"Congratulation\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"You have passed the category, please choose anothers\"))));\n};\n\nCategory.propTypes = {\n  category: PropTypes.shape({}).isRequired,\n  currentQuestion: PropTypes.string.isRequired,\n  handleSubmit: PropTypes.func.isRequired,\n  answerInput: PropTypes.shape({\n    value: PropTypes.instanceOf(HTMLInputElement)\n  })\n};\nexport default Category;","map":{"version":3,"sources":["/Users/dimitri/Desktop/École/Hetic/ReactJS/the-trivia/src/views/Category/Category.js"],"names":["React","PropTypes","Category","category","currentQuestion","handleSubmit","answerInput","resetScore","score","life","answerFalse","title","propTypes","shape","isRequired","string","func","value","instanceOf","HTMLInputElement"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,OAAmG;AAAA,MAAhGC,QAAgG,QAAhGA,QAAgG;AAAA,MAAtFC,eAAsF,QAAtFA,eAAsF;AAAA,MAArEC,YAAqE,QAArEA,YAAqE;AAAA,MAAvDC,WAAuD,QAAvDA,WAAuD;AAAA,MAA1CC,UAA0C,QAA1CA,UAA0C;AAAA,MAA9BC,KAA8B,QAA9BA,KAA8B;AAAA,MAAvBC,IAAuB,QAAvBA,IAAuB;AAAA,MAAjBC,WAAiB,QAAjBA,WAAiB;AAElH,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAM,IAAA,QAAQ,EAAEL,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAkBF,QAAQ,CAACQ,KAA3B,CADF,EAGE;AAAK,IAAA,EAAE,EAAC,UAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,iBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGP,eADH,CADF,EAIE;AAAK,IAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,GAAG,EAAEE,WAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAJF,EAOE;AAAQ,IAAA,SAAS,EAAC,kBAAlB;AAAqC,IAAA,IAAI,EAAC,QAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAPF,EAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAVF,EAUsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIE,KAAJ,CAVtB,EAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAXF,EAWgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIC,IAAJ,CAXhB,EAW6B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIC,WAAJ,CAX7B,CAHF,EAiBE;AAAK,IAAA,EAAE,EAAC,UAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAEE;AAAQ,IAAA,SAAS,EAAC,EAAlB;AAAqB,IAAA,IAAI,EAAC,QAA1B;AAAmC,IAAA,OAAO,EAAE;AAAA,aAAMH,UAAU,EAAhB;AAAA,KAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFF,CAjBF,EAwBE;AAAK,IAAA,EAAE,EAAC,kBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4DAFF,CAxBF,CADF,CADF;AAkCD,CApCD;;AAsCAL,QAAQ,CAACU,SAAT,GAAqB;AACnBT,EAAAA,QAAQ,EAAEF,SAAS,CAACY,KAAV,CAAgB,EAAhB,EAAoBC,UADX;AAEnBV,EAAAA,eAAe,EAAEH,SAAS,CAACc,MAAV,CAAiBD,UAFf;AAGnBT,EAAAA,YAAY,EAAEJ,SAAS,CAACe,IAAV,CAAeF,UAHV;AAInBR,EAAAA,WAAW,EAAEL,SAAS,CAACY,KAAV,CAAgB;AAC3BI,IAAAA,KAAK,EAAEhB,SAAS,CAACiB,UAAV,CAAqBC,gBAArB;AADoB,GAAhB;AAJM,CAArB;AASA,eAAejB,QAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Category = ({ category, currentQuestion, handleSubmit, answerInput, resetScore, score, life, answerFalse}) => {\n  \n  return (\n    <section>\n      <form onSubmit={handleSubmit}>\n        <h1>You choosed: {category.title}</h1>\n\n        <div id=\"question\">\n          <h3 className=\"question__title\">\n            {currentQuestion}\n          </h3>\n          <div className=\"question__answerInput\">\n            <input ref={answerInput}/>\n          </div>\n          <button className=\"question__submit\" type=\"submit\">\n            Valid\n          </button>\n          <h4>Your score:</h4><p>{score}</p>\n          <h4>Life:</h4><p>{life}</p><p>{answerFalse}</p>\n        </div>\n        \n        <div id=\"gameOver\">\n          <h4>Game Over</h4>\n          <button className=\"\" type=\"button\" onClick={() => resetScore()}>\n            reset\n          </button>\n        </div>\n\n        <div id=\"categorySucceeds\">\n          <h4>Congratulation</h4>\n          <p>You have passed the category, please choose anothers</p>\n        </div>\n      </form>\n    </section>\n  );\n  \n}\n\nCategory.propTypes = {\n  category: PropTypes.shape({}).isRequired,\n  currentQuestion: PropTypes.string.isRequired,\n  handleSubmit: PropTypes.func.isRequired,\n  answerInput: PropTypes.shape({\n    value: PropTypes.instanceOf(HTMLInputElement)\n  }),\n};\n\nexport default Category;"]},"metadata":{},"sourceType":"module"}