{"ast":null,"code":"import _regeneratorRuntime from \"/Users/kamgang/Desktop/React/exercice2/the-trivia/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/kamgang/Desktop/React/exercice2/the-trivia/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/kamgang/Desktop/React/exercice2/the-trivia/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/kamgang/Desktop/React/exercice2/the-trivia/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { API_BASE_URL } from './api_base_url';\nimport asyncFetch from './async-fetch';\n\nvar api =\n/*#__PURE__*/\nfunction () {\n  function api() {\n    _classCallCheck(this, api);\n\n    this.baseUrl = API_BASE_URL;\n  }\n\n  _createClass(api, [{\n    key: \"getQuestionByCategory\",\n    value: function () {\n      var _getQuestionByCategory = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(categoryId) {\n        var url, requestConfig, parsedData;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                url = \"\".concat(this.baseUrl, \"api/clues?category=\").concat(categoryId);\n                requestConfig = {\n                  method: 'GET',\n                  mode: 'cors'\n                };\n                _context.next = 4;\n                return asyncFetch(url, requestConfig);\n\n              case 4:\n                parsedData = _context.sent;\n                return _context.abrupt(\"return\", parsedData);\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function getQuestionByCategory(_x) {\n        return _getQuestionByCategory.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"getCategoryById\",\n    value: function () {\n      var _getCategoryById = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(id) {\n        var url, requestConfig, parsedData;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                url = \"\".concat(this.baseUrl, \"api/category?id=\").concat(id);\n                requestConfig = {\n                  method: 'GET',\n                  mode: 'cors'\n                };\n                _context2.next = 4;\n                return asyncFetch(url, requestConfig);\n\n              case 4:\n                parsedData = _context2.sent;\n                return _context2.abrupt(\"return\", parsedData);\n\n              case 6:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      return function getCategoryById(_x2) {\n        return _getCategoryById.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"getAllCategories\",\n    value: function () {\n      var _getAllCategories = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(count) {\n        var url, requestConfig, parsedData;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                url = \"\".concat(this.baseUrl, \"api/categories?count=\").concat(count);\n                requestConfig = {\n                  method: 'GET',\n                  mode: 'cors'\n                };\n                _context3.next = 4;\n                return asyncFetch(url, requestConfig);\n\n              case 4:\n                parsedData = _context3.sent;\n                return _context3.abrupt(\"return\", parsedData);\n\n              case 6:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      return function getAllCategories(_x3) {\n        return _getAllCategories.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"saveItem\",\n    value: function saveItem(key, item) {\n      localStorage.setItem(key, JSON.stringify(item));\n    }\n  }, {\n    key: \"getItem\",\n    value: function getItem(key) {\n      var storage = localStorage.getItem(key);\n      return storage ? JSON.parse(storage) : [];\n    }\n  }]);\n\n  return api;\n}();\n\nexport default new api();","map":{"version":3,"sources":["/Users/kamgang/Desktop/React/exercice2/the-trivia/src/helpers/api.js"],"names":["API_BASE_URL","asyncFetch","api","baseUrl","categoryId","url","requestConfig","method","mode","parsedData","id","count","key","item","localStorage","setItem","JSON","stringify","storage","getItem","parse"],"mappings":";;;;AAAA,SACEA,YADF,QAEO,gBAFP;AAGA,OAAOC,UAAP,MAAuB,eAAvB;;IAEMC,G;;;AAEJ,iBAAc;AAAA;;AAEZ,SAAKC,OAAL,GAAeH,YAAf;AAED;;;;;;;gDAE2BI,U;;;;;;AAEpBC,gBAAAA,G,aAAS,KAAKF,O,gCAA6BC,U;AAE3CE,gBAAAA,a,GAAgB;AACpBC,kBAAAA,MAAM,EAAE,KADY;AAEpBC,kBAAAA,IAAI,EAAE;AAFc,iB;;uBAKGP,UAAU,CAACI,GAAD,EAAMC,aAAN,C;;;AAA7BG,gBAAAA,U;iDAECA,U;;;;;;;;;;;;;;;;;;;iDAIaC,E;;;;;;AAEdL,gBAAAA,G,aAAS,KAAKF,O,6BAA0BO,E;AAExCJ,gBAAAA,a,GAAgB;AACpBC,kBAAAA,MAAM,EAAE,KADY;AAEpBC,kBAAAA,IAAI,EAAE;AAFc,iB;;uBAKGP,UAAU,CAACI,GAAD,EAAMC,aAAN,C;;;AAA7BG,gBAAAA,U;kDAECA,U;;;;;;;;;;;;;;;;;;;iDAIcE,K;;;;;;AAEfN,gBAAAA,G,aAAS,KAAKF,O,kCAA+BQ,K;AAE7CL,gBAAAA,a,GAAgB;AACpBC,kBAAAA,MAAM,EAAE,KADY;AAEpBC,kBAAAA,IAAI,EAAE;AAFc,iB;;uBAKGP,UAAU,CAACI,GAAD,EAAMC,aAAN,C;;;AAA7BG,gBAAAA,U;kDAECA,U;;;;;;;;;;;;;;;;6BAGAG,G,EAAKC,I,EAAM;AAElBC,MAAAA,YAAY,CAACC,OAAb,CAAqBH,GAArB,EAA0BI,IAAI,CAACC,SAAL,CAAeJ,IAAf,CAA1B;AAED;;;4BAEOD,G,EAAK;AAEX,UAAIM,OAAO,GAAGJ,YAAY,CAACK,OAAb,CAAqBP,GAArB,CAAd;AAEA,aAAOM,OAAO,GAAGF,IAAI,CAACI,KAAL,CAAWF,OAAX,CAAH,GAAyB,EAAvC;AAED;;;;;;AAGH,eAAe,IAAIhB,GAAJ,EAAf","sourcesContent":["import {\n  API_BASE_URL\n} from './api_base_url';\nimport asyncFetch from './async-fetch';\n\nclass api {\n\n  constructor() {\n\n    this.baseUrl = API_BASE_URL;\n\n  }\n\n  async getQuestionByCategory(categoryId) {\n\n    const url = `${this.baseUrl}api/clues?category=${categoryId}`;\n\n    const requestConfig = {\n      method: 'GET',\n      mode: 'cors'\n    };\n\n    const parsedData = await asyncFetch(url, requestConfig);\n\n    return parsedData;\n\n  }\n\n  async getCategoryById(id) {\n\n    const url = `${this.baseUrl}api/category?id=${id}`;\n\n    const requestConfig = {\n      method: 'GET',\n      mode: 'cors'\n    };\n\n    const parsedData = await asyncFetch(url, requestConfig);\n\n    return parsedData;\n\n  }\n\n  async getAllCategories(count) {\n\n    const url = `${this.baseUrl}api/categories?count=${count}`;\n\n    const requestConfig = {\n      method: 'GET',\n      mode: 'cors'\n    };\n\n    const parsedData = await asyncFetch(url, requestConfig);\n\n    return parsedData;\n  }\n\n  saveItem(key, item) {\n\n    localStorage.setItem(key, JSON.stringify(item));\n\n  }\n\n  getItem(key) {\n\n    let storage = localStorage.getItem(key);\n\n    return storage ? JSON.parse(storage) : [];\n\n  }\n}\n\nexport default new api();"]},"metadata":{},"sourceType":"module"}