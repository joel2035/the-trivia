{"ast":null,"code":"import _regeneratorRuntime from \"/Users/dimitri/Desktop/E\\u0301cole/Hetic/ReactJS/the-trivia/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/dimitri/Desktop/E\\u0301cole/Hetic/ReactJS/the-trivia/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/dimitri/Desktop/E\\u0301cole/Hetic/ReactJS/the-trivia/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/dimitri/Desktop/E\\u0301cole/Hetic/ReactJS/the-trivia/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/dimitri/Desktop/E\\u0301cole/Hetic/ReactJS/the-trivia/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/dimitri/Desktop/E\\u0301cole/Hetic/ReactJS/the-trivia/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/dimitri/Desktop/E\\u0301cole/Hetic/ReactJS/the-trivia/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/dimitri/Desktop/E\\u0301cole/Hetic/ReactJS/the-trivia/src/views/Category/CategoryContainer.js\";\nimport React, { Component, createRef } from 'react';\nimport api from '../../helpers/api';\nimport Category from './Category';\nimport './Category.css';\n\nvar CategoryContainer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CategoryContainer, _Component);\n\n  function CategoryContainer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CategoryContainer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CategoryContainer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      category: null,\n      currentQuestion: 0,\n      answerQuestion: null,\n      score: 0,\n      life: 3,\n      answerFalse: \"\",\n      gameOver: \"\" // createRef in order to bring back input value to its parent\n\n    };\n    _this.answerInput = createRef();\n\n    _this.handleSubmit = function (e) {\n      var _this$state = _this.state,\n          category = _this$state.category,\n          currentQuestion = _this$state.currentQuestion,\n          score = _this$state.score,\n          life = _this$state.life;\n      var divGameOver = document.getElementById('gameOver');\n      var divCategorySucceeds = document.getElementById('categorySucceeds');\n      var answer = _this.answerInput.current.value;\n      e.preventDefault();\n      console.log(category.clues);\n\n      if (answer === category.clues[currentQuestion].answer) {\n        _this.setState({\n          score: score + 1,\n          answerFalse: \"\",\n          currentQuestion: currentQuestion + 1\n        });\n\n        _this.answerInput.current.value = \"\";\n\n        if (currentQuestion === 4) {\n          divCategorySucceeds.style.display = \"initial\";\n          window.location.replace(\"/\");\n        }\n      } else {\n        _this.setState({\n          life: life - 1,\n          answerFalse: \"Answer is false\"\n        });\n\n        if (life === 1) {\n          divGameOver.style.display = \"initial\";\n        }\n      }\n    };\n\n    _this.resetScore = function () {\n      var divGameOver = document.getElementById('gameOver');\n      divGameOver.style.display = \"none\";\n\n      _this.setState({\n        score: 0,\n        life: 3,\n        answerFalse: \"\"\n      });\n\n      window.location.replace(\"/\");\n    };\n\n    return _this;\n  }\n\n  _createClass(CategoryContainer, [{\n    key: \"componentDidMount\",\n    // async needed when using promise\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var data;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return api.getCategoryById(this.props.match.params.id);\n\n              case 2:\n                data = _context.sent;\n                // stored response in the state;\n                this.setState({\n                  category: data\n                });\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      };\n    }() // Vérification de la reponse\n\n  }, {\n    key: \"render\",\n    // \n    value: function render() {\n      var _this$state2 = this.state,\n          category = _this$state2.category,\n          currentQuestion = _this$state2.currentQuestion,\n          score = _this$state2.score,\n          life = _this$state2.life,\n          answerFalse = _this$state2.answerFalse;\n      if (!category) return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, \"is loading\");\n      return React.createElement(Category, {\n        category: category,\n        currentQuestion: category.clues[currentQuestion].question,\n        handleSubmit: this.handleSubmit,\n        answerInput: this.answerInput,\n        resetScore: this.resetScore,\n        score: score,\n        life: life,\n        answerFalse: answerFalse,\n        gameOver: this.gameOver,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return CategoryContainer;\n}(Component);\n\nexport default CategoryContainer;","map":{"version":3,"sources":["/Users/dimitri/Desktop/École/Hetic/ReactJS/the-trivia/src/views/Category/CategoryContainer.js"],"names":["React","Component","createRef","api","Category","CategoryContainer","state","category","currentQuestion","answerQuestion","score","life","answerFalse","gameOver","answerInput","handleSubmit","e","divGameOver","document","getElementById","divCategorySucceeds","answer","current","value","preventDefault","console","log","clues","setState","style","display","window","location","replace","resetScore","getCategoryById","props","match","params","id","data","question"],"mappings":"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","sourcesContent":["import React, { Component, createRef } from 'react';\nimport api from '../../helpers/api';\nimport Category from './Category';\nimport './Category.css'\n\nclass CategoryContainer extends Component {\n  state = {\n    category: null,\n    currentQuestion: 0,\n    answerQuestion: null,\n    score: 0,\n    life: 3,\n    answerFalse: \"\",\n    gameOver: \"\",\n  }\n\n  // createRef in order to bring back input value to its parent\n  answerInput = createRef();\n\n  // async needed when using promise\n  async componentDidMount() {\n    const data = await api.getCategoryById(this.props.match.params.id);\n    // stored response in the state;\n    this.setState({\n      category: data,\n    });\n  }\n\n  // Vérification de la reponse\n  handleSubmit = (e) => {\n    const { category, currentQuestion, score, life } = this.state;\n    const divGameOver = document.getElementById('gameOver');\n    const divCategorySucceeds = document.getElementById('categorySucceeds');\n    const answer = this.answerInput.current.value;\n\n    e.preventDefault();\n\n    console.log(category.clues)\n\n    if(answer === category.clues[currentQuestion].answer) {\n      this.setState({\n        score: score+1,\n        answerFalse: \"\",\n        currentQuestion: currentQuestion+1,\n      })\n\n      this.answerInput.current.value = \"\";\n\n      if(currentQuestion === 4) {\n        divCategorySucceeds.style.display = \"initial\";\n        window.location.replace(\"/\");\n      }\n    } else {\n      this.setState({\n        life: life-1,\n        answerFalse: \"Answer is false\"\n      })\n\n      if(life === 1) {\n        divGameOver.style.display = \"initial\";\n      }\n    }\n  }\n\n  // Le reset du score \n  resetScore = () => {\n    const divGameOver = document.getElementById('gameOver');\n\n    divGameOver.style.display = \"none\";\n\n    this.setState({\n      score: 0,\n      life: 3,\n      answerFalse: \"\",\n    })\n\n    window.location.replace(\"/\");\n  }\n\n  // \n\n  render() {\n    const { category, currentQuestion, score, life, answerFalse } = this.state;\n\n    if (!category) return <div>is loading</div>\n\n    return (\n      <Category\n        category={category}\n        currentQuestion={category.clues[currentQuestion].question}\n        handleSubmit={this.handleSubmit}\n        answerInput={this.answerInput}\n        resetScore={this.resetScore}\n        score={score}\n        life={life}\n        answerFalse={answerFalse}\n        gameOver={this.gameOver}\n      />\n    );\n  }\n}\n\nexport default CategoryContainer;"]},"metadata":{},"sourceType":"module"}