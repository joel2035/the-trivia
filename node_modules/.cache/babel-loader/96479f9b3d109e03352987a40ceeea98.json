{"ast":null,"code":"var _jsxFileName = \"/Users/dimitri/Desktop/E\\u0301cole/Hetic/ReactJS/the-trivia/src/views/Category/Category.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nvar Category = function Category(_ref) {\n  var category = _ref.category,\n      currentQuestionIndex = _ref.currentQuestionIndex,\n      handleSubmit = _ref.handleSubmit,\n      answerInput = _ref.answerInput,\n      nextQuestion = _ref.nextQuestion,\n      resetScore = _ref.resetScore,\n      score = _ref.score,\n      life = _ref.life,\n      answerFalse = _ref.answerFalse;\n  var currentQuestion = category.clues[currentQuestionIndex];\n  return React.createElement(\"section\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, \"You choosed: \", category.title), React.createElement(\"div\", {\n    className: \"question\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    className: \"question__title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, currentQuestion.question), React.createElement(\"div\", {\n    className: \"question__answerInput\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    ref: answerInput,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    className: \"question__submit\",\n    type: \"submit\",\n    onClick: function onClick() {\n      return nextQuestion();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, \"Next\"), React.createElement(\"button\", {\n    className: \"\",\n    type: \"submit\",\n    onClick: function onClick() {\n      return resetScore();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, \"reset\"), React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, \"Your score:\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, score), React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \"Life:\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, life), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, answerFalse))));\n};\n\nCategory.propTypes = {\n  category: PropTypes.shape({}).isRequired,\n  currentQuestionIndex: PropTypes.number.isRequired,\n  handleSubmit: PropTypes.func.isRequired,\n  answerInput: PropTypes.shape({\n    value: PropTypes.instanceOf(HTMLInputElement)\n  })\n};\nexport default Category;","map":{"version":3,"sources":["/Users/dimitri/Desktop/École/Hetic/ReactJS/the-trivia/src/views/Category/Category.js"],"names":["React","PropTypes","Category","category","currentQuestionIndex","handleSubmit","answerInput","nextQuestion","resetScore","score","life","answerFalse","currentQuestion","clues","title","question","propTypes","shape","isRequired","number","func","value","instanceOf","HTMLInputElement"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,OAAuH;AAAA,MAApHC,QAAoH,QAApHA,QAAoH;AAAA,MAA1GC,oBAA0G,QAA1GA,oBAA0G;AAAA,MAApFC,YAAoF,QAApFA,YAAoF;AAAA,MAAtEC,WAAsE,QAAtEA,WAAsE;AAAA,MAAzDC,YAAyD,QAAzDA,YAAyD;AAAA,MAA3CC,UAA2C,QAA3CA,UAA2C;AAAA,MAA/BC,KAA+B,QAA/BA,KAA+B;AAAA,MAAxBC,IAAwB,QAAxBA,IAAwB;AAAA,MAAlBC,WAAkB,QAAlBA,WAAkB;AACtI,MAAMC,eAAe,GAAGT,QAAQ,CAACU,KAAT,CAAeT,oBAAf,CAAxB;AAEA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAM,IAAA,QAAQ,EAAEC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAkBF,QAAQ,CAACW,KAA3B,CADF,EAEE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,iBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,eAAe,CAACG,QADnB,CADF,EAIE;AAAK,IAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,GAAG,EAAET,WAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAJF,EAOE;AAAQ,IAAA,SAAS,EAAC,kBAAlB;AAAqC,IAAA,IAAI,EAAC,QAA1C;AAAmD,IAAA,OAAO,EAAE;AAAA,aAAMC,YAAY,EAAlB;AAAA,KAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF,EAUE;AAAQ,IAAA,SAAS,EAAC,EAAlB;AAAqB,IAAA,IAAI,EAAC,QAA1B;AAAmC,IAAA,OAAO,EAAE;AAAA,aAAMC,UAAU,EAAhB;AAAA,KAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAVF,EAaE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAbF,EAasB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIC,KAAJ,CAbtB,EAcE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAdF,EAcgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIC,IAAJ,CAdhB,EAc6B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIC,WAAJ,CAd7B,CAFF,CADF,CADF;AAwBD,CA3BD;;AA6BAT,QAAQ,CAACc,SAAT,GAAqB;AACnBb,EAAAA,QAAQ,EAAEF,SAAS,CAACgB,KAAV,CAAgB,EAAhB,EAAoBC,UADX;AAEnBd,EAAAA,oBAAoB,EAAEH,SAAS,CAACkB,MAAV,CAAiBD,UAFpB;AAGnBb,EAAAA,YAAY,EAAEJ,SAAS,CAACmB,IAAV,CAAeF,UAHV;AAInBZ,EAAAA,WAAW,EAAEL,SAAS,CAACgB,KAAV,CAAgB;AAC3BI,IAAAA,KAAK,EAAEpB,SAAS,CAACqB,UAAV,CAAqBC,gBAArB;AADoB,GAAhB;AAJM,CAArB;AASA,eAAerB,QAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Category = ({ category, currentQuestionIndex, handleSubmit, answerInput, nextQuestion, resetScore, score, life, answerFalse }) => {\n  const currentQuestion = category.clues[currentQuestionIndex];\n  \n  return (\n    <section>\n      <form onSubmit={handleSubmit}>\n        <h1>You choosed: {category.title}</h1>\n        <div className=\"question\">\n          <h3 className=\"question__title\">\n            {currentQuestion.question}\n          </h3>\n          <div className=\"question__answerInput\">\n            <input ref={answerInput}/>\n          </div>\n          <button className=\"question__submit\" type=\"submit\" onClick={() => nextQuestion()}>\n            Next\n          </button>\n          <button className=\"\" type=\"submit\" onClick={() => resetScore()}>\n            reset\n          </button>\n          <h4>Your score:</h4><p>{score}</p>\n          <h4>Life:</h4><p>{life}</p><p>{answerFalse}</p>\n        </div>\n      </form>\n    </section>\n  );\n  \n}\n\nCategory.propTypes = {\n  category: PropTypes.shape({}).isRequired,\n  currentQuestionIndex: PropTypes.number.isRequired,\n  handleSubmit: PropTypes.func.isRequired,\n  answerInput: PropTypes.shape({\n    value: PropTypes.instanceOf(HTMLInputElement)\n  }),\n};\n\nexport default Category;"]},"metadata":{},"sourceType":"module"}